已经有的写法：

1. 多线程的池类算法
	上游放数，下游取数
	（1）查询法：获取锁，查看不是自己所需要的值，出让调度器
	（2）通知法：使用条件变量，唤醒signal

当线程的处理函数执行很快时，拿到上游给的数就立即处理完，多个线程几乎没有同时工作，时间消耗在拿数、放数的过程。

这时候就要对任务池进行放大，一次性放多个数。
则池中的数按什么类型存放？
	（1） 队列，使用循环队列，放数时放在队尾，取数时从队首
	（2）管道（其实和队列是一样的）

一个进程中的多线程通信时，类似于上面的求质数法，只有一个int类型的全局数据，
现在增加数据个数，则需要人为的实现管道（即顺序存储的循环队列，在进程内，不是内核自带的管道）来实现通信。


如何退出？
	当读者无数据可读，且没有写者时，说明读者该退出了，这就要求管道对其使用它的读者和写着进行计数。
	

	
管道必须建立读写双方，才能实现


对于管道的操作权限，应该放在中间层

管道阻塞实现（满不能写、空不能读，需要等待）